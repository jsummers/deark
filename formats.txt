Deark -- Information about supported formats


=== Image format modules ===

(Images that are not "extracted" will be converted to PNG, except as noted.)

* Alias PIX, a.k.a. Vivid ray tracer bitmap (module="alias_pix")
  - Truecolor only. Grayscale not supported.

* Alpha Microsystems BMP (module="alphabmp") (experimental)

* Amiga Workbench Icon (module="amigaicon")
  - Original format: Mostly supported, but the format is not portable, and
    there is not just one correct way to render the images.
  - NewIcons: Fully supported.
  - GlowIcons / OS3.5: Compressed images are supported. Uncompressed images are
    not.

* AMOS Picture Bank (module="abk")

* AMOS Sprite Bank (AmSp) / AMOS Icon Bank (AmIc) (module="abk")

* ANI (Windows Animated Cursor) (module="ani")
  - Extract individual CUR and ICO files.

* Animatic Film (module="animatic")
  - Extract the individual frames.

* ANSI Art (module="ansiart")
  - Autodetection usually works, but not always. You may have to use
     "-m ansiart" or "-m ansi".
  - Supports only the most common escape codes, which is usually good enough.
  - Some features depend on the output format. "Blink" is not supported with
     image output, for example.
  Options
   -opt char:output=image - Output to a bitmap instead of HTML
   -opt char:width=<n> - Number of characters per row
   -opt ansiart:no24bitcolor - Disable support for 24-bit color definitions
   -opt ansiart:noblink - Disable blinking characters, enabling high-intensity
     background colors. This is usually unnecessary, as well-formed files will
     explicitly disable blink.
   -opt ansiart:vt100 - Use VT100 mode

* Apple volume label image (module="applevol")

* ART - PFS: 1st Publisher clip art (module="fp_art")

* ArtWorx Data Format (ADF) (module="artworx_adf")

* AutoCAD Slide Library (.slb) (module="autocad_slb")
  - Extracts the component AutoCAD Slide (.sld) files.

* Award BIOS logo (EPA, AWBM) (module="awbm") (experimental)
  - Supports version 1
  - Supports 4-bit and 8-bit version 2
  Options
   -opt awbm:rgb=0 - (v2) Assume BGR sample order (default for 4-bit)
   -opt awbm:rgb=1 - (v2) Assume RGB sample order (default for 8-bit)

* Binary Text (.BIN character graphics format) (module="bintext")
  - Must use "-m bintext", unless the file has a SAUCE record.
  Options
   -opt char:width=<n> - Number of characters per row

* BMP (Windows bitmap) (module="bmp")

* Bob ray tracer bitmap (module="bob")

* BPG (module="bpg") (experimental)
  - Extract Exif, XMP, ICC Profiles, thumbnails

* BSAVE/BLOAD image (module="bsave")
  Support (some) PC-style BSAVE files.
  Options
   -file2 <file.pal> - Use this palette file (BSAVE format)
   -opt palfile=<file.pal> - Use this palette file (BSAVE format)
   -opt bsave:width=<n>
   -opt bsave:height=<n>
   -opt bsave:fmt=char  - Character graphics
   -opt bsave:fmt=cga2  - 640x200 2-color
   -opt bsave:fmt=cga4  - 320x200 4-color
   -opt bsave:fmt=cga16 - Very low (160x100) resolution
   -opt bsave:fmt=mcga  - 320x200 256-color
   -opt bsave:fmt=wh2   - 2-color, header includes width & height
   -opt bsave:fmt=wh4   - 4 color, header includes width & height
   -opt bsave:fmt=wh16  - 16 color, header includes width & height, inter-row
     interlaced
   -opt bsave:fmt=b265  - Special
   -opt bsave:fmt=2col  - 2-color noninterlaced (experimental)
   -opt bsave:fmt=4col  - 4-color noninterlaced (experimental)

* Calamus Raster Graphic (module="crg") (experimental)

* Cardfile (module="cardfile")
  - Partial support. MGC format only.
  - Extracts bitmaps.
  - Extracts text (use -a).

* COKE (Atari Falcon) (*.tg1) (module="coke")

* Compface intermediate format (module="compfacei")
  This is an obscure text-based format related to X-Face, used by the Compface
  software.
  - Cannot be autodetected. You must use "-m compfacei".

* Dr. Halo .CUT (module="drhalocut")
  Options
   -file2 <file.pal> - Read the palette from this file.

* DIB (module="dib")
  - Adds a BMP file header to a raw Windows DIB file.

* DCX (module="dcx")
  Multi-image PCX format.
  - Extracts individual PCX files.

* DEGAS and DEGAS Elite (module="degas")

* Doodle (Atari) (module="doodle")
  - Supports high resolution (640x400) only

* EggPaint (*.trp) (module="eggpaint")

* Enhanced Windows Metafile (module=emf) (experimental)
  - Extract BMP images from some records.

* EPOC MBM/Sketch/AIF (module="epocimage")
  - Supports grayscale with 2 or 4 bits/pixel
  - Supports palette color with 4 or 8 bits/pixel
  - Supports 16/24 bit full color
  - Supports uncompressed and RLE8/RLE16/RLE24 compression

* EPS (Encapsulated PostScript) (module="eps")
  - Extract EPS, TIFF, and WMF from "EPS DOS Binary" format.
  - Supports preview images in EPSI format (1-, 2-, 4-, 8-bit grayscale)

* Falcon True Color (module="ftc")

* farbfeld (module="farbfeld")

* GEM VDI Bit Image (GEM Raster) (module="gemras")
  - Supports original bilevel format
  - Supports paletted XIMG format
  - Supports some non-XIMG 16-color images

* GIF (module="gif")
  - Extract the image, or every frame from an animated or mult-image GIF.
  - Extract text from plaintext extensions, as separate text files. Text only;
     colors are ignored.
  - Extract comments (use -a).
  Options
   -opt gif:raw - Extract the individual component images, instead of rendering
     the frame in full.

* GodPaint (Atari Falcon) (module="godpaint")

* GRASP GL animation (module="graspgl")
  - Extracts all files.

* GROB (HP calculator) (module="grob")
  - Supports binary and text encodings.
  - Some text GROB files can't be autodetected, and need "-m grob".
  Options
   -opt grob:planes=<n> - Treat image as grayscale. <n> should usually be 2.
   -opt grob:planeorder=l - For grayscale, assume the least-significant
     bitplane comes first.

* HP 100LX / HP 200LX .ICN icon format (module="hpicn")

* HR (TRS-80 High Resolution graphics file) (module="hr")

* HS2 (module="hs2")
  Obscure format associated with a program called "POSTERING"

* HSI Raw (module="hsiraw")

* icns (Apple Icon) (module="icns")
  - Supports uncompressed 1-, 4-, and 8-bit images (with 1-bit mask).
  - Supports RLE-compressed 24-bit images (with 8-bit mask).
  - Extract embedded JP2 and PNG files.

* ICO/CUR (Windows icon/cursor) (module="ico")
  - Supports most but not all formats.
  - PNG-formatted icons will be extracted as-is, not decoded.
  - Extract images of the (otherwise unused) masks for 32-bit images (use -a).

* ILBM and related IFF-based images (module="ilbm")
  - Supports ILBM, ACBM, PBM
  - Supports 1-8 bit paletted, 24-bit truecolor
  - Supports HAM6, HAM8, Halfbrite
  - Supports color-keyed and bitmask transparency
  - Extract thumbnails from TINY chunks
  - Extract text from ANNO chunks (use -a)
  Options
   -opt ilbm:notrans - Disable support for transparency
   -opt ilbm:fixpal=<0|1> - Don't/Do try to correct palettes that seem to have
     fewer than 8 bits of precision.

* IndyPaint (*.tru) (module="indypaint")

* Inset PIX (module="insetpix") (experimental)
  - Bitmap images only. Character graphics files are not supported.

* InShape IIM (module="iim")

* Jovian Logic VI bitmap (module="jovianvi") (experimental)

* JPEG and JPEG-LS (module="jpeg")
  - Extract ICC profiles.
  - Extract JFXX JPEG-formatted thumbnails (rare).
  - Extract XMP data, including "extended XMP".
  - Extract JPEG-HDR residual images.
  - Process Exif data (or extract it: use -a)
  - Process Photoshop-related data.
  - Process Multi-Picture Format (MPF/MPO) data.
  - Extract comments (use -a). Comment bytes are extracted as-is, because there
     is no way to determine the character encoding.
  Options
   -opt jpeg:stopateoi - Stop when the end of the first JPEG "file" has been
     found, instead of looking for additional JPEG data after it (as in MPO
     format, for example)

* JPEG 2000 (module="jpeg2000")
  - Extract JPEG 2000 codestream from JP2/JPX/JPM formats.
  - Extract XML data.
  - Extract GeoTIFF data.
  - Extract XMP data.
  - Extract Exif data (use -a) (nonstandard; partial support)
  - Process Photoshop-related data.

* JPEG 2000 codestream (module="j2c")
  - Extract comments (use -a).

* JPEG XR (HD Photo) (part of module "tiff")
  - Minimal support.

* LSS16 (SYSLINUX image) (module="lss16")

* Lumena CEL (module="lumena_cel")
  - Single-image files only

* MacPaint (module="macpaint")
  - Can also decode brush patterns (use -a)
  Options
   -opt macpaint:macbinary=<0|1>

* MAKIchan graphics (module="makichan") (experimental)
  - Supports most 16- and 256-color .MAG images
  - Supports most 16-color .MKI images
  - Does not support .MAX

* MRW (Minolta RAW) (module="mrw")
  - Process Exif data (or extract it: use -a)

* MSP (Microsoft Paint graphics) (module="msp")
  - Version 1 and 2

* MS Word for DOS Screen Capture (module="mswordscr") (experimental)
  Supports the same options as the pcx module.

* NEOchrome (.NEO) (module="neochrome")

* NEOchrome Animation (module="neochrome_ani") (experimental)

* New Print Shop .POG format (module="newprintshop")
  Options
   -file2 <file.pnm> - Use this "name" file
   -opt namefile=<file.pnm> - Use this "name" file

* NGG (Nokia Group Graphic) (module="ngg")

* NLM (Nokia Logo Manager bitmap) (module="nlm")

* NOL (Nokia Operator Logo) (module="nol")

* NPM (Nokia Picture Message) (module="npm")

* NSL (Nokia Startup Logo) (module="nsl")

* OLPC .565 firmware icon (module="olpc565")

* OS/2 Icon, Pointer, Bitmap Array formats (module="os2bmp")
  - Converts icons & pointers to individual PNG files.
  - Icon, pointer, and BMP image files are extracted from Bitmap Array files.
    Reprocess icon and pointer files to convert to PNG.

* PaintShop Pro Browser Cache (module="jbf")
  - Format v1.x: BMP files are reconstructed and extracted.
  - Format v2.x: JPEG files are extracted.

* Palm BitmapType (module="palmbitmap")
  - Cannot easily be autodetected. You must use "-m palmbitmap", except in most
    cases when the file extension is ".palm".
  - May be found inside some Palm files. See also the notes for the "Palm PRC"
    and "Palm PDB/PQA" modules.
  Options
   -opt palm:le - Assume little-endian byte order

* Palm Database (PDB) ImageViewer/FireViewer (part of module "palmdb")

* PCPaint / Pictor (module="pcpaint")
  - Supports PIC and CLP formats. Some files are not portable, because they use
    a nonstandard palette that is not contained in the file.
  - Supports most images with 8 or fewer bits/pixel.
  - Supports character graphics (experimental).
  Options
   -opt pcpaint:fmt=pic
   -opt pcpaint:fmt=clp
   -file2 <file.pic> - PIC file to read the palette from
   -opt palfile=<file.pic> - PIC file to read the palette from

* PCX (module="pcx")
  - Supports most of the common varieties of PCX.
  Options
   -opt pcx:pal=<0|1> - The predefined palette to use, if there is no palette
     in the file. Default is 0.
   -file2 <file.p13> - Read the palette from a separate file. Each entry is 3
     bytes (R,G,B); samples range from 0-63.

* PGC (Portfolio graphics compressed) (module="pgc")

* PGF (Portfolio graphics) (module="pf_pgf")

* PGX (Portfolio graphics animation) (module="pgx")
  - Extract embedded PGC images.

* PI4 (Atari Falcon 320x240) (module="fpaint_pi4")

* PI7 (Atari Falcon 640x480) (module="atari_pi7")

* PI9 (Atari Falcon 320x200) (module="fpaint_pi9")

* PICT (Macintosh image) (module="pict")
  - Extract bitmap images.

* PM (module="pm_xv") (experimental/incomplete)
  This is an obscure format supported by XV and XnView.
  - Supports 24-bit truecolor, and 8-bit grayscale

* PNG / MNG / JNG (module="png")
  - Extract XMP data.
  - Extract ICC profiles.

* PNM/PBM/PGM/PPM/PAM (module="pnm")

* PrintMaster .SHP format (module="printmaster")
  Options
   -file2 <file.sdr> - Use this "name" file
   -opt namefile=<file.sdr> - Use this "name" file

* Print Shop .DAT format (module="printshop")
  - Not all files can be autodetected. You may need "-m printshop".
  Options
   -file2 <file.sdr> - Use this "name" file
   -opt namefile=<file.nam> - Use this "name" file

* Prism Paint (module="prismpaint")
  - Supports 1-, 2-, 4-, 8-, and 16-bits per pixel

* PSD / PSB (Photoshop) (module="psd")
  - Basic support for RGB/grayscale/paletted 8/16-bit images
  - Extract JPEG thumbnails. Some thumbnail images have the red and blue
    channels swapped -- Deark warns about this, but does not correct it.
  - Extract XMP data.
  - Extract ICC profiles.
  - Extract linked layer image data (could be PNG/JPG/PSD/etc. format).
  - Process Exif data (or extract it: use -a)
  - Extract IPTC data (use -a).
  - Extract "text engine data" (use -a)

* Psion PIC (module="psionpic")
  A Psion PIC file contains one or more 1-bpp bitmaps, some of which can be
  combined to make grayscale images. Deark will try to guess which images
  should be combined, but it may not always get it right.
  - Supports 1- and 2-bit grayscale.
  Options
   -opt psionpic:bw - Do not try to detect grayscale images. Write each bitmap
     as a separate image.

* RSC (GEM resource) (module="rsc") (experimental)
  - Supports both "old" and "new" formats.
  - Extracts icons and bitmaps.

* QDV (Giffer) (module="qdv")

* QTIF (QuickTime image) (module="qtif")
  - Extract embedded JPEG, TIFF, and other image files.
  - Decode some "raw" (uncompressed) images.

* RIPscrip icon (.ICN) (module="ripicon") (experimental)
  - Not autodetected. Must use "-m ripicon".

* RISC OS / Acorn Sprite (module="rosprite")
  - Autodetection may not always work. May need "-m rosprite".
  - "Old" format is pretty well supported.
  - "New" format is mostly supported, but not well-tested.

* SHG and MRB (module="shg")
  Segmented Hypergraphics and Multi-Resolution Bitmap formats are used in
  Windows .HLP files.
  - Converts bitmap graphics to BMP format.
  - Extracts WMF files.

* Spectrum 512 Compressed (.spc) (module="spectrum512c")
  Options
   -opt spectrum512:tospu - Output to an .spu file

* Spectrum 512 Smooshed (.sps) (module="spectrum512s")
  Options
   -opt spectrum512:tospu - Output to an .spu file

* Spectrum 512 uncompressed (.spu) (module="spectrum512u")

* STOS Memory Bank (module="stos") (experimental)
  - Decode "sprite bank" images
  - Decode "icon bank" images

* Sun Raster (module="sunras") (incomplete)
  - Supports most common image types

* TGA (Targa) (module="tga")

* Thumbs.db (Windows thumbnail) (part of module "cfb")
  - Extract thumbnail files (embedded JPEG or PNG files)
  - Some thumbnails use a nonstandard RGBA format. These are not converted to
    a portable format.

* TI calculator "variable" files (module="tivariable")
  - TI73/TI82/TI83 pictures
  - TI85/TI86 pictures
  - TI89/TI92/TI92+ pictures

* TIFF and Exif (module="tiff")
  - Extract JPEG-formatted Exif thumbnails, and some types of Old-style
    JPEG-compressed images.
  - Extract ICC profiles.
  - Process Photoshop-related data.
  - Extract IPTC data (use -a).

* TIM (Playstation graphics) (module="tim") (experimental/incomplete)

* Tiny Stuff (.TNY, .TN1, .TN2, .TN3) (module="tinystuff")

* VBM (VDC BitMap) (module="vbm")
  - Version 2 only

* VITec image format (module="vitec) (experimental/incomplete)

* VORT ray tracer .pix image (module="vort") (experimental/incomplete)

* Windows Metafile (module=wmf) (experimental)
  - Extract BMP images from some records.

* Winzle (module=winzle)
  - Convert Winzle obfuscated BMP (.wzl) to BMP.

* WordPerfect Graphics (module=wpg)
  - Extract bitmaps

* X11 puzzle (module="xpuzzle")
  Format used by X-Windows "puzzle" program.
  ftp://ftp.x.org/pub/unsupported/programs/puzzle/
  Generated by Netpbm's ppmtopuzz utility.

* XBIN (module="xbin")
  Renders XBIN character graphics to a bitmap (default) or HTML.
  - Extract embedded fonts (use -a).
  Options
   -opt char:output=html - Use HTML output format

* X-Face (icon/avatar format) (module="xface")
  - You may have to use "-m xface".

* XGA (Atari Falcon image) (module="falcon_xga")

* YBM (Bennet Yee face format) (module="ybm")


=== Font formats ===

* FNT (Windows font) (module="fnt")
  FNT files have an extra "absolute space" character, which Deark arbitrarily
  places at code point 256, or U+2002 (EN SPACE).

* GEM bitmap font (module="gemfont") (experimental)

* GRASP font (module="graspfont") (experimental)
  .set/.fnt; may be found inside GRASP .gl files.

* PC Screen Font (PSF) (module="psf")
  Options
   -opt font:noaliases - Restrict to one Unicode codepoint per glyph

* PFF2 font (module="pff2")

* PK font (Packed Font) (module="pkfont") (partial support)

=== Compression, archive, installer, disk image modules ===

* AmBs (AMOS "Banks" aggregate format) (module="abk")
  - Extract AmSp, AmIc, AmBk files.

* ar (.a archive/library format) (module="ar") (experimental/incomplete)
  - Supports System V long filenames

* ATR (Atari disk image) (module="atr") (experimental/incomplete)

* BinHex (.hqx) (module="binhex")
  - Extract data and resource forks to separate files.

* compress (legacy Unix .Z format) (module="compress")

* cpio (module="cpio")

* D64 (Commodore 64 disk format) (module="d64") (experimental)

* Doom WAD (module="wad")
  - The extracted files are usually in specialized formats.

* Gzip (module="gzip")

* Microsoft Compound File Binary (module="cfb")
  - Extract the embedded data streams, though many of them may not be in a
    standard file format.
  Options
   -opt cfb:fmt=raw - Do not try to detect the document type.
   -opt cfb:fmt=auto - Autodetect the document type (default).
   -opt cfb:fmt=thumbsdb - Treat the file as a Thumbs.db file.

* Microsoft Installation Compression (module="mscompress")
  - "KWAJ" variant not supported

* Palm PDB/PQA (module="palmdb")
  - You may have to use "-m palmdb".
  - Use -a to extract the record blocks, but note that they are usually not in
    well-known formats.

* Palm PRC (module="palmrc")
  - You may have to use "-m palmrc".
  - Use -a to extract the record blocks, but note that they are usually not in
    well-known formats.
  - Extracted ".palm" files are in Palm BitmapType format. Reprocess them to
    convert to PNG.

* RPM (package manager) (module="rpm)
  - Extract compressed cpio file.

* T64 (Commodore 64 "tape" format) (module="t64")
  - Partial support

* tar (module="tar") (experimental/incomplete)
  - Rare files may need "-m tar", as tar is difficult to autodetect.

* ZIP (module="zip")
  - Limited support
  - Extract main ZIP file comment (use -a).
  - Extract comments for individual files (use -a).

* zlib (module="zlib")
  - Raw zlib files are uncompressed.

* ZOO (module="zoo")
  - You may have to use "-m zoo".
  - Extract comments (use -a).

== Transfer encoding modules ==

* Ascii85 (module="ascii85") (incomplete)
  - Supports old and new btoa formats
  - Supports data with "<~" / "~>" delimiters

* Base16 (module="base16" or "hex")
  - Decode "hex encoded" data.
  - Not autodetected; use "-m base16".
  - Only supports raw data, such as that produced by "xxd -p". Does not
    support full hex dumps.

* Base64 (module="base64")
  - Not autodetected; use "-m base64".

* Uuencoded (module="uuencode")

* Xxencoded (module="xxencode")

=== Other modules ===

* AMOS source code (module="amos_source")
  - Extract AmBs resource file.

* C64 BASIC (module="basic-c64") (experimental)
  - Detokenize C64 BASIC programs

* Copy (module="copy")
  - "Extract" the entire file. Use with -start and -size to extract part of
    the file.

* CP437 (module="cp437")
  Convert DOS Code Page 437 text to UTF-8.
  - Not autodetected. Use "-m cp437".
  - Note that code points below 0x20 are ambiguous. Deark tries to guess which
    ones are control characters.

* CRC-32 (module="crc32")
  - Print the IEEE CRC-32 of the file.

* EXE/PE/NE/etc. (module="exe")
  EXE format can be complex. Not all varieties are correctly supported.
  - Extract bitmaps, icons, and cursors from NE and PE (Windows .exe) files.
  - Extract fonts.
  - Extract embedded manifests (use -a).
  - Extract code-signing certificates (use -a).
  - Extract bitmaps from LX (Linear Executable) files. Note that some of these
    may be in "Bitmap Array" format. Reprocess them with Deark to extract the
    actual BMP file(s).
  - Extract icons and cursors from LX files. Note that these will use OS/2
    format. Reprocess them with Deark to convert to PNG.

* ICC profile (module="iccprofile")
  - Debug info only.

* IFF (Interchange File Format) (module="iff")
  - IFF can be parsed, but in many cases nothing can be extracted from it.
  Options
   -opt iff:align=<n> - Assume chunks are padded to an n-byte boundary.

* IPTC metadata (module="iptc")
  - Extract captions/abstracts (use -a).
  - Extract raster caption bitmaps.

* JPEG scan (module="jpegscan")
  - This module tries to find and extract embedded JPEG and JPEG-LS files from
    otherwise-unsupported formats. Use "-m jpegscan".

* HLP (Windows Help) (module="hlp") (experimental)
  - Extract SHG/MRB graphics
  - Extract icon (rarely present)

* MP3 audio (module="mp3") (experimental)
  - Not all files can be autodetected.
  - Mainly for ID3 metadata. The audio data is not converted.

* NULL (module="null")
  - Do nothing.

* Photoshop Action format (.atn) (module="ps_action")
  - Files can be parsed, but there is usually nothing that can be extracted
    from them.

* Photoshop Brush format (.abr) (module="ps_brush")
  - Files can be parsed, but there is usually nothing that can be extracted
    from them.

* Photoshop Custom Shapes format (.csh) (module="ps_csh")
  - Files can be parsed, but there is usually nothing that can be extracted
    from them.

* Photoshop Gradient format (.grd) (module="ps_gradient")
  - Supports file version 5 only (Photoshop 6+)
  - Files can be parsed, but there is usually nothing that can be extracted
    from them.

* Photoshop Patterns format (.pat) (module="ps_pattern")
  - Files can be parsed, but there is usually nothing that can be extracted
    from them.

* Photoshop Styles format (.asl) (module="ps_styles")
  - Files can be parsed, but there is usually nothing that can be extracted
    from them.

* Psion APP/IMG and OPA/OPO (module="psionapp")
  - Extract Psion PIC icons.
  - Extract other contents (use -a).

* RIFF (module="riff")
  Metaformat used by WAV, AVI, WebP, etc.
  - RIFF can be parsed, but in many cases nothing can be extracted from it.

